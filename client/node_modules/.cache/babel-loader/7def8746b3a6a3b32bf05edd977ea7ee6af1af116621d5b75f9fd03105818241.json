{"ast":null,"code":"import axios from'axios';// Base URL for API\nconst API_BASE_URL='https://pos-backend-v2.bangachieu2.workers.dev/api';// Create axios instance with default configuration\nconst api=axios.create({baseURL:API_BASE_URL,timeout:10000,headers:{'Content-Type':'application/json','Accept':'application/json'}});// Add request interceptor\napi.interceptors.request.use(config=>{console.log('📤 API Request:',config.method.toUpperCase(),config.url);return config;},error=>{console.error('❌ Request Error:',error);return Promise.reject(error);});// Add response interceptor\napi.interceptors.response.use(response=>{console.log('✅ API Response:',response.data);return response;},error=>{console.error('❌ API Error:',error);// Handle specific error cases\nif(error.response){// Server responded with error status\nconsole.error('Response error:',error.response.data);}else if(error.request){// Request made but no response received\nconsole.error('Network error:',error.request);}else{// Something else happened\nconsole.error('Error:',error.message);}return Promise.reject(error);});// API Functions\nexport const ordersAPI={// Get all orders\ngetAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/orders',{params});},// Get order by ID\ngetById:id=>api.get(\"/orders/\".concat(id)),// Create new order\ncreate:data=>api.post('/orders',data),// Update order\nupdate:(id,data)=>api.put(\"/orders/\".concat(id),data),// Delete order\ndelete:id=>api.delete(\"/orders/\".concat(id)),// Get order statistics  \ngetStats:()=>api.get('/orders/stats/summary')};export const productsAPI={// Get all products\ngetAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/products',{params});},// Get product by ID\ngetById:id=>api.get(\"/products/\".concat(id)),// Create new product\ncreate:data=>api.post('/products',data),// Update product\nupdate:(id,data)=>api.put(\"/products/\".concat(id),data),// Delete product\ndelete:id=>api.delete(\"/products/\".concat(id)),// Get product serials\ngetSerials:function(id){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return api.get(\"/products/\".concat(id,\"/serials\"),{params});},// Add product serials\naddSerials:(id,data)=>api.post(\"/products/\".concat(id,\"/serials\"),data),// Update serial\nupdateSerial:(serialId,data)=>api.put(\"/serials/\".concat(serialId),data),// Delete serial\ndeleteSerial:serialId=>api.delete(\"/serials/\".concat(serialId)),// Search serials\nsearchSerials:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/serials/search',{params});},// Get warranty info by serial\ngetWarrantyInfo:serialNumber=>api.get(\"/serials/\".concat(serialNumber,\"/warranty\")),// Sell serials\nsellSerials:data=>api.post('/serials/sell',data),// Get sold serials\ngetSoldSerials:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/serials/sold',{params});}};export const customersAPI={// Get all customers\ngetAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/customers',{params});},// Get customer by ID\ngetById:id=>api.get(\"/customers/\".concat(id)),// Create new customer\ncreate:data=>api.post('/customers',data),// Update customer\nupdate:(id,data)=>api.put(\"/customers/\".concat(id),data),// Delete customer\ndelete:id=>api.delete(\"/customers/\".concat(id))};export const suppliersAPI={// Get all suppliers\ngetAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/suppliers',{params});},// Get supplier by ID\ngetById:id=>api.get(\"/suppliers/\".concat(id)),// Create new supplier\ncreate:data=>api.post('/suppliers',data),// Update supplier\nupdate:(id,data)=>api.put(\"/suppliers/\".concat(id),data),// Delete supplier\ndelete:id=>api.delete(\"/suppliers/\".concat(id))};export const usersAPI={// Get all users\ngetAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/users',{params});},// Get user by ID\ngetById:id=>api.get(\"/users/\".concat(id)),// Create new user\ncreate:data=>api.post('/users',data),// Update user\nupdate:(id,data)=>api.put(\"/users/\".concat(id),data),// Delete user\ndelete:id=>api.delete(\"/users/\".concat(id)),// Login\nlogin:credentials=>api.post('/auth/login',credentials)};export const categoriesAPI={// Get all categories\ngetAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/categories',{params});},// Get category by ID\ngetById:id=>api.get(\"/categories/\".concat(id)),// Create new category\ncreate:data=>api.post('/categories',data),// Update category\nupdate:(id,data)=>api.put(\"/categories/\".concat(id),data),// Delete category\ndelete:id=>api.delete(\"/categories/\".concat(id))};export const warrantyAPI={// Get all warranty claims\ngetClaims:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/warranty/claims',{params});},// Get warranty claim by ID\ngetClaimById:id=>api.get(\"/warranty/claims/\".concat(id)),// Create new warranty claim\ncreateClaim:data=>api.post('/warranty/claims',data),// Update warranty claim\nupdateClaim:(id,data)=>api.put(\"/warranty/claims/\".concat(id),data),// Get warranty statistics\ngetStats:()=>api.get('/warranty/stats'),// Search warranty by serial\nsearchBySerial:serialNumber=>api.get(\"/warranty/search/\".concat(serialNumber))};export const reportsAPI={// Get sales report\ngetSalesReport:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/sales',{params});},// Get best selling products\ngetBestSellingProducts:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/best-selling',{params});},// Get financial summary\ngetFinancialSummary:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/financial-summary',{params});},// Get category stats\ngetCategoryStats:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/category-stats',{params});},// Get customer stats\ngetCustomerStats:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/customer-stats',{params});},// Get profit & loss\ngetProfitLoss:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/profit-loss',{params});},// Dashboard stats (alias for orders stats)\ngetDashboardStats:()=>api.get('/orders/stats/summary'),// Best selling (alias for getBestSellingProducts)\ngetBestSelling:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/best-selling',{params});},// Profit report (alias for getProfitLoss)\ngetProfitReport:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/profit-loss',{params});}};export const inventoryAPI={// Get inventory transactions\ngetTransactions:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/inventory/transactions',{params});},// Create inventory adjustment\ncreateAdjustment:data=>api.post('/inventory/adjustment',data)};export const financialAPI={// Get financial transactions\ngetTransactions:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/financial/transactions',{params});},// Create financial transaction\ncreateTransaction:data=>api.post('/financial/transactions',data)};// Test API connection\nexport const testAPI={// Health check\nhealth:()=>api.get('/health'),// Test specific endpoint\ntest:endpoint=>api.get(endpoint)};// Export the main API instance\nexport default api;// Export utility functions\nexport const formatCurrency=amount=>{return new Intl.NumberFormat('vi-VN',{style:'currency',currency:'VND'}).format(amount);};export const formatDate=date=>{return new Intl.DateTimeFormat('vi-VN',{year:'numeric',month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'}).format(new Date(date));};export const downloadReport=async function(reportType){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await api.get(\"/reports/\".concat(reportType,\"/download\"),{params,responseType:'blob'});const url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement('a');link.href=url;link.setAttribute('download',\"\".concat(reportType,\"-report-\").concat(new Date().toISOString().split('T')[0],\".xlsx\"));document.body.appendChild(link);link.click();link.remove();window.URL.revokeObjectURL(url);}catch(error){console.error('Error downloading report:',error);throw error;}};// Export individual functions that are commonly used\nexport const getDashboardStats=()=>api.get('/orders/stats/summary');export const getBestSelling=function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/best-selling',{params});};export const getProfitReport=function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/profit-loss',{params});};export const getSalesReport=function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/sales',{params});};export const getCategoryStats=function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/category-stats',{params});};export const getCustomerStats=function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/reports/customer-stats',{params});};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","console","log","method","toUpperCase","url","error","Promise","reject","response","data","message","ordersAPI","getAll","params","arguments","length","undefined","get","getById","id","concat","post","update","put","delete","getStats","productsAPI","getSerials","addSerials","updateSerial","serialId","deleteSerial","searchSerials","getWarrantyInfo","serialNumber","sellSerials","getSoldSerials","customersAPI","suppliersAPI","usersAPI","login","credentials","categoriesAPI","warrantyAPI","getClaims","getClaimById","createClaim","updateClaim","searchBySerial","reportsAPI","getSalesReport","getBestSellingProducts","getFinancialSummary","getCategoryStats","getCustomerStats","getProfitLoss","getDashboardStats","getBestSelling","getProfitReport","inventoryAPI","getTransactions","createAdjustment","financialAPI","createTransaction","testAPI","health","test","endpoint","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDate","date","DateTimeFormat","year","month","day","hour","minute","Date","downloadReport","reportType","responseType","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","toISOString","split","body","appendChild","click","remove","revokeObjectURL"],"sources":["C:/Users/ADMIN/Desktop/kho/kho/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL for API\r\nconst API_BASE_URL = 'https://pos-backend-v2.bangachieu2.workers.dev/api';\r\n\r\n// Create axios instance with default configuration\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  }\r\n});\r\n\r\n// Add request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('📤 API Request:', config.method.toUpperCase(), config.url);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('❌ Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('✅ API Response:', response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('❌ API Error:', error);\r\n    \r\n    // Handle specific error cases\r\n    if (error.response) {\r\n      // Server responded with error status\r\n      console.error('Response error:', error.response.data);\r\n    } else if (error.request) {\r\n      // Request made but no response received\r\n      console.error('Network error:', error.request);\r\n    } else {\r\n      // Something else happened\r\n      console.error('Error:', error.message);\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API Functions\r\nexport const ordersAPI = {\r\n  // Get all orders\r\n  getAll: (params = {}) => api.get('/orders', { params }),\r\n  \r\n  // Get order by ID\r\n  getById: (id) => api.get(`/orders/${id}`),\r\n  \r\n  // Create new order\r\n  create: (data) => api.post('/orders', data),\r\n  \r\n  // Update order\r\n  update: (id, data) => api.put(`/orders/${id}`, data),\r\n  \r\n  // Delete order\r\n  delete: (id) => api.delete(`/orders/${id}`),\r\n  \r\n  // Get order statistics  \r\n  getStats: () => api.get('/orders/stats/summary')\r\n};\r\n\r\nexport const productsAPI = {\r\n  // Get all products\r\n  getAll: (params = {}) => api.get('/products', { params }),\r\n  \r\n  // Get product by ID\r\n  getById: (id) => api.get(`/products/${id}`),\r\n  \r\n  // Create new product\r\n  create: (data) => api.post('/products', data),\r\n  \r\n  // Update product\r\n  update: (id, data) => api.put(`/products/${id}`, data),\r\n  \r\n  // Delete product\r\n  delete: (id) => api.delete(`/products/${id}`),\r\n  \r\n  // Get product serials\r\n  getSerials: (id, params = {}) => api.get(`/products/${id}/serials`, { params }),\r\n  \r\n  // Add product serials\r\n  addSerials: (id, data) => api.post(`/products/${id}/serials`, data),\r\n  \r\n  // Update serial\r\n  updateSerial: (serialId, data) => api.put(`/serials/${serialId}`, data),\r\n  \r\n  // Delete serial\r\n  deleteSerial: (serialId) => api.delete(`/serials/${serialId}`),\r\n  \r\n  // Search serials\r\n  searchSerials: (params = {}) => api.get('/serials/search', { params }),\r\n  \r\n  // Get warranty info by serial\r\n  getWarrantyInfo: (serialNumber) => api.get(`/serials/${serialNumber}/warranty`),\r\n  \r\n  // Sell serials\r\n  sellSerials: (data) => api.post('/serials/sell', data),\r\n  \r\n  // Get sold serials\r\n  getSoldSerials: (params = {}) => api.get('/serials/sold', { params })\r\n};\r\n\r\nexport const customersAPI = {\r\n  // Get all customers\r\n  getAll: (params = {}) => api.get('/customers', { params }),\r\n  \r\n  // Get customer by ID\r\n  getById: (id) => api.get(`/customers/${id}`),\r\n  \r\n  // Create new customer\r\n  create: (data) => api.post('/customers', data),\r\n  \r\n  // Update customer\r\n  update: (id, data) => api.put(`/customers/${id}`, data),\r\n  \r\n  // Delete customer\r\n  delete: (id) => api.delete(`/customers/${id}`)\r\n};\r\n\r\nexport const suppliersAPI = {\r\n  // Get all suppliers\r\n  getAll: (params = {}) => api.get('/suppliers', { params }),\r\n  \r\n  // Get supplier by ID\r\n  getById: (id) => api.get(`/suppliers/${id}`),\r\n  \r\n  // Create new supplier\r\n  create: (data) => api.post('/suppliers', data),\r\n  \r\n  // Update supplier\r\n  update: (id, data) => api.put(`/suppliers/${id}`, data),\r\n  \r\n  // Delete supplier\r\n  delete: (id) => api.delete(`/suppliers/${id}`)\r\n};\r\n\r\nexport const usersAPI = {\r\n  // Get all users\r\n  getAll: (params = {}) => api.get('/users', { params }),\r\n  \r\n  // Get user by ID\r\n  getById: (id) => api.get(`/users/${id}`),\r\n  \r\n  // Create new user\r\n  create: (data) => api.post('/users', data),\r\n  \r\n  // Update user\r\n  update: (id, data) => api.put(`/users/${id}`, data),\r\n  \r\n  // Delete user\r\n  delete: (id) => api.delete(`/users/${id}`),\r\n  \r\n  // Login\r\n  login: (credentials) => api.post('/auth/login', credentials)\r\n};\r\n\r\nexport const categoriesAPI = {\r\n  // Get all categories\r\n  getAll: (params = {}) => api.get('/categories', { params }),\r\n  \r\n  // Get category by ID\r\n  getById: (id) => api.get(`/categories/${id}`),\r\n  \r\n  // Create new category\r\n  create: (data) => api.post('/categories', data),\r\n  \r\n  // Update category\r\n  update: (id, data) => api.put(`/categories/${id}`, data),\r\n  \r\n  // Delete category\r\n  delete: (id) => api.delete(`/categories/${id}`)\r\n};\r\n\r\nexport const warrantyAPI = {\r\n  // Get all warranty claims\r\n  getClaims: (params = {}) => api.get('/warranty/claims', { params }),\r\n  \r\n  // Get warranty claim by ID\r\n  getClaimById: (id) => api.get(`/warranty/claims/${id}`),\r\n  \r\n  // Create new warranty claim\r\n  createClaim: (data) => api.post('/warranty/claims', data),\r\n  \r\n  // Update warranty claim\r\n  updateClaim: (id, data) => api.put(`/warranty/claims/${id}`, data),\r\n  \r\n  // Get warranty statistics\r\n  getStats: () => api.get('/warranty/stats'),\r\n  \r\n  // Search warranty by serial\r\n  searchBySerial: (serialNumber) => api.get(`/warranty/search/${serialNumber}`)\r\n};\r\n\r\nexport const reportsAPI = {\r\n  // Get sales report\r\n  getSalesReport: (params = {}) => api.get('/reports/sales', { params }),\r\n  \r\n  // Get best selling products\r\n  getBestSellingProducts: (params = {}) => api.get('/reports/best-selling', { params }),\r\n  \r\n  // Get financial summary\r\n  getFinancialSummary: (params = {}) => api.get('/reports/financial-summary', { params }),\r\n  \r\n  // Get category stats\r\n  getCategoryStats: (params = {}) => api.get('/reports/category-stats', { params }),\r\n  \r\n  // Get customer stats\r\n  getCustomerStats: (params = {}) => api.get('/reports/customer-stats', { params }),\r\n  \r\n  // Get profit & loss\r\n  getProfitLoss: (params = {}) => api.get('/reports/profit-loss', { params }),\r\n  \r\n  // Dashboard stats (alias for orders stats)\r\n  getDashboardStats: () => api.get('/orders/stats/summary'),\r\n  \r\n  // Best selling (alias for getBestSellingProducts)\r\n  getBestSelling: (params = {}) => api.get('/reports/best-selling', { params }),\r\n  \r\n  // Profit report (alias for getProfitLoss)\r\n  getProfitReport: (params = {}) => api.get('/reports/profit-loss', { params })\r\n};\r\n\r\nexport const inventoryAPI = {\r\n  // Get inventory transactions\r\n  getTransactions: (params = {}) => api.get('/inventory/transactions', { params }),\r\n  \r\n  // Create inventory adjustment\r\n  createAdjustment: (data) => api.post('/inventory/adjustment', data)\r\n};\r\n\r\nexport const financialAPI = {\r\n  // Get financial transactions\r\n  getTransactions: (params = {}) => api.get('/financial/transactions', { params }),\r\n  \r\n  // Create financial transaction\r\n  createTransaction: (data) => api.post('/financial/transactions', data)\r\n};\r\n\r\n// Test API connection\r\nexport const testAPI = {\r\n  // Health check\r\n  health: () => api.get('/health'),\r\n  \r\n  // Test specific endpoint\r\n  test: (endpoint) => api.get(endpoint)\r\n};\r\n\r\n// Export the main API instance\r\nexport default api;\r\n\r\n// Export utility functions\r\nexport const formatCurrency = (amount) => {\r\n  return new Intl.NumberFormat('vi-VN', {\r\n    style: 'currency',\r\n    currency: 'VND'\r\n  }).format(amount);\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  return new Intl.DateTimeFormat('vi-VN', {\r\n    year: 'numeric',\r\n    month: '2-digit', \r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  }).format(new Date(date));\r\n};\r\n\r\nexport const downloadReport = async (reportType, params = {}) => {\r\n  try {\r\n    const response = await api.get(`/reports/${reportType}/download`, {\r\n      params,\r\n      responseType: 'blob'\r\n    });\r\n    \r\n    const url = window.URL.createObjectURL(new Blob([response.data]));\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', `${reportType}-report-${new Date().toISOString().split('T')[0]}.xlsx`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(url);\r\n  } catch (error) {\r\n    console.error('Error downloading report:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Export individual functions that are commonly used\r\nexport const getDashboardStats = () => api.get('/orders/stats/summary');\r\nexport const getBestSelling = (params = {}) => api.get('/reports/best-selling', { params });\r\nexport const getProfitReport = (params = {}) => api.get('/reports/profit-loss', { params });\r\nexport const getSalesReport = (params = {}) => api.get('/reports/sales', { params });\r\nexport const getCategoryStats = (params = {}) => api.get('/reports/category-stats', { params });\r\nexport const getCustomerStats = (params = {}) => api.get('/reports/customer-stats', { params }); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}