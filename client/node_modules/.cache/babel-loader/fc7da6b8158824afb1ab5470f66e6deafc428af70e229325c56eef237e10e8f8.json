{"ast":null,"code":"import _objectSpread from\"C:/Users/ADMIN/Desktop/kho/kho/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Row,Col,Card,Input,Button,List,Typography,message,Modal,Form,InputNumber,Space,Tag,Divider,Spin,Table,Radio,motion,Skeleton}from'antd';import{PlusOutlined,MinusOutlined,DeleteOutlined,ShoppingCartOutlined,PrinterOutlined,SearchOutlined,ShoppingOutlined,UserOutlined}from'@ant-design/icons';import{useForm,Controller}from'react-hook-form';import{zodResolver}from'@hookform/resolvers/zod';import*as z from'zod';import{toast}from'sonner';import{productsAPI,ordersAPI,customersAPI}from'../services/api';import{formatCurrency}from'../utils/format';import CartList from'../components/CartList';import SerialSelectModal from'../components/SerialSelectModal';import CustomerSelectModal from'../components/CustomerSelectModal';import ProductList from'../components/ProductList';import OrderPrintModal from'../components/OrderPrintModal';import OrderFormModal from'../components/OrderFormModal';import CustomerQuickAddModal from'../components/CustomerQuickAddModal';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Title,Text}=Typography;const{Search}=Input;const orderSchema=z.object({customer_id:z.number().int().positive().optional().nullable(),customer_name:z.string().optional(),customer_phone:z.string().optional(),customer_email:z.string().email('Email không hợp lệ').optional().or(z.literal('')),payment_method:z.enum(['cash','card','transfer','ewallet']).optional(),notes:z.string().optional()});function POSPage(){const[products,setProducts]=useState([]);const[filteredProducts,setFilteredProducts]=useState([]);const[cart,setCart]=useState([]);const[loading,setLoading]=useState(false);const[orderModalVisible,setOrderModalVisible]=useState(false);const[customerModalVisible,setCustomerModalVisible]=useState(false);const[customers,setCustomers]=useState([]);const[filteredCustomers,setFilteredCustomers]=useState([]);const[selectedCustomer,setSelectedCustomer]=useState(null);const[serialModalVisible,setSerialModalVisible]=useState(false);const[selectedProductForSerial,setSelectedProductForSerial]=useState(null);const[availableSerials,setAvailableSerials]=useState([]);const[selectedSerials,setSelectedSerials]=useState([]);const[printModalVisible,setPrintModalVisible]=useState(false);const[printOrder,setPrintOrder]=useState(null);const[customerQuickAddVisible,setCustomerQuickAddVisible]=useState(false);const[customerQuickAddLoading,setCustomerQuickAddLoading]=useState(false);const{control,handleSubmit,formState:{errors},setValue,watch,reset}=useForm({resolver:zodResolver(orderSchema),defaultValues:{customer_id:null,customer_name:'',customer_phone:'',customer_email:'',payment_method:'cash',notes:''}});const customerPhoneWatch=watch('customer_phone');useEffect(()=>{fetchProducts();fetchCustomers();},[]);useEffect(()=>{if(selectedCustomer){setValue('customer_id',selectedCustomer.id);setValue('customer_name',selectedCustomer.name);setValue('customer_phone',selectedCustomer.phone);setValue('customer_email',selectedCustomer.email||'');}else{setValue('customer_id',null);}},[selectedCustomer,setValue]);const fetchCustomers=async function(){let searchQuery=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';try{const response=await customersAPI.getAll({phone:searchQuery,name:searchQuery});if(response.data.success){setCustomers(response.data.data||[]);setFilteredCustomers(response.data.data||[]);}else{setCustomers([]);toast.error('Lỗi khi lấy danh sách khách hàng: '+response.data.message);}}catch(error){console.error('Error fetching customers:',error);setCustomers([]);toast.error('Lỗi kết nối khi lấy danh sách khách hàng.');}};const handleCustomerSearch=value=>{const filtered=customers.filter(customer=>{var _customer$phone;return customer.name.toLowerCase().includes(value.toLowerCase())||((_customer$phone=customer.phone)===null||_customer$phone===void 0?void 0:_customer$phone.includes(value));});setFilteredCustomers(filtered);};const selectCustomer=customer=>{setSelectedCustomer(customer);setCustomerModalVisible(false);};const clearSelectedCustomer=()=>{setSelectedCustomer(null);setValue('customer_id',null);setValue('customer_name','');setValue('customer_phone','');setValue('customer_email','');};const fetchProducts=async()=>{try{setLoading(true);const response=await productsAPI.getAll();if(response.data.success){setProducts(response.data.data||[]);setFilteredProducts(response.data.data||[]);}else{setProducts([]);console.error('API returned error:',response.data.message);}}catch(error){console.error('Error fetching products:',error);setProducts([]);// Don't show error message to user, just silently handle it\n}finally{setLoading(false);}};const handleSearch=value=>{const filtered=products.filter(product=>{var _product$sku,_product$barcode;return product.name.toLowerCase().includes(value.toLowerCase())||((_product$sku=product.sku)===null||_product$sku===void 0?void 0:_product$sku.toLowerCase().includes(value.toLowerCase()))||((_product$barcode=product.barcode)===null||_product$barcode===void 0?void 0:_product$barcode.toLowerCase().includes(value.toLowerCase()));});setFilteredProducts(filtered);};const handleSerialSearch=async serialNumber=>{if(!serialNumber.trim()){setFilteredProducts(products);return;}try{setLoading(true);// Tìm kiếm serial trong database\nconst response=await productsAPI.searchSerials({q:serialNumber,status:'available'});if(response.data.success&&response.data.data.length>0){const serial=response.data.data[0];// Tìm sản phẩm tương ứng với serial\nconst product=products.find(p=>p.id===serial.product_id);if(product){// Hiển thị sản phẩm tìm thấy\nsetFilteredProducts([product]);// Tự động thêm serial vào giỏ hàng\nconst existingItem=cart.find(item=>{var _item$serial;return item.product.id===product.id&&((_item$serial=item.serial)===null||_item$serial===void 0?void 0:_item$serial.serial_number)===serial.serial_number;});if(existingItem){toast.warning(\"Serial \".concat(serial.serial_number,\" \\u0111\\xE3 c\\xF3 trong gi\\u1ECF h\\xE0ng\"));}else{setCart(prev=>[...prev,{product:product,quantity:1,serial:serial,price:product.price}]);toast.success(\"\\u0110\\xE3 th\\xEAm s\\u1EA3n ph\\u1EA9m \".concat(product.name,\" (Serial: \").concat(serial.serial_number,\") v\\xE0o gi\\u1ECF h\\xE0ng\"));}}else{toast.error('Không tìm thấy sản phẩm tương ứng với serial này');}}else{toast.error('Không tìm thấy serial hoặc serial đã được bán');setFilteredProducts(products);}}catch(error){console.error('Error searching serial:',error);toast.error('Lỗi khi tìm kiếm serial');setFilteredProducts(products);}finally{setLoading(false);}};const showSerialModal=async product=>{try{setSelectedProductForSerial(product);const response=await productsAPI.getSerials(product.id,{status:'available'});if(response.data.success){setAvailableSerials(Array.isArray(response.data.data)?response.data.data:[]);}else{setAvailableSerials([]);}setSerialModalVisible(true);}catch(error){console.error('Error fetching serials:',error);setAvailableSerials([]);toast.error('Không thể tải danh sách serial của sản phẩm');}};const addToCart=async product=>{try{// Thay vì thêm trực tiếp vào giỏ hàng, hiển thị modal chọn serial\nawait showSerialModal(product);}catch(error){console.error('Error adding to cart:',error);toast.error('Lỗi khi thêm sản phẩm vào giỏ hàng');}};const addSerialToCart=selectedSerials=>{if(!selectedSerials||selectedSerials.length===0){toast.warning('Vui lòng chọn ít nhất một serial');return;}selectedSerials.forEach(serial=>{const existingItem=cart.find(item=>{var _item$serial2;return item.product.id===selectedProductForSerial.id&&((_item$serial2=item.serial)===null||_item$serial2===void 0?void 0:_item$serial2.serial_number)===serial.serial_number;});if(existingItem){toast.warning(\"Serial \".concat(serial.serial_number,\" \\u0111\\xE3 c\\xF3 trong gi\\u1ECF h\\xE0ng\"));return;}setCart(prev=>[...prev,{product:selectedProductForSerial,quantity:1,serial:serial,price:selectedProductForSerial.price}]);});toast.success(\"\\u0110\\xE3 th\\xEAm \".concat(selectedSerials.length,\" s\\u1EA3n ph\\u1EA9m v\\xE0o gi\\u1ECF h\\xE0ng\"));setSerialModalVisible(false);setSelectedSerials([]);};const removeFromCart=(productId,serialNumber)=>{if(serialNumber){// Xóa item có serial cụ thể\nsetCart(prev=>prev.filter(item=>{var _item$serial3;return!(item.product.id===productId&&((_item$serial3=item.serial)===null||_item$serial3===void 0?void 0:_item$serial3.serial_number)===serialNumber);}));}else{// Xóa tất cả item của sản phẩm này (fallback)\nsetCart(prev=>prev.filter(item=>item.product.id!==productId));}};const updateQuantity=(productId,serialNumber,newQuantity)=>{if(newQuantity<=0){removeFromCart(productId,serialNumber);return;}setCart(prev=>prev.map(item=>{var _item$serial4;if(item.product.id===productId&&((_item$serial4=item.serial)===null||_item$serial4===void 0?void 0:_item$serial4.serial_number)===serialNumber){return _objectSpread(_objectSpread({},item),{},{quantity:newQuantity});}return item;}));};const clearCart=()=>{setCart([]);};const getTotalAmount=()=>{return cart.reduce((total,item)=>total+item.price*item.quantity,0);};const getTotalItems=()=>{return cart.reduce((total,item)=>total+item.quantity,0);};const handleCheckout=()=>{if(cart.length===0){toast.warning('Giỏ hàng trống');return;}setOrderModalVisible(true);};const submitOrder=async values=>{setLoading(true);try{// Tổng hợp tất cả serial để bán\nconst serialsToSell=[];cart.forEach(item=>{if(item.serial&&item.serial.serial_number){serialsToSell.push(item.serial.serial_number);}});const orderData={customer_id:(selectedCustomer===null||selectedCustomer===void 0?void 0:selectedCustomer.id)||null,customer_name:(selectedCustomer===null||selectedCustomer===void 0?void 0:selectedCustomer.name)||values.customer_name||null,customer_phone:(selectedCustomer===null||selectedCustomer===void 0?void 0:selectedCustomer.phone)||values.customer_phone||null,customer_email:(selectedCustomer===null||selectedCustomer===void 0?void 0:selectedCustomer.email)||values.customer_email||null,payment_method:values.payment_method||'cash',items:cart.map(item=>{var _item$serial5;return{product_id:item.product.id,product_name:item.product.name,quantity:item.quantity,price:item.price,subtotal:item.quantity*item.price,serial_number:((_item$serial5=item.serial)===null||_item$serial5===void 0?void 0:_item$serial5.serial_number)||null};}),total_amount:getTotalAmount(),serials_sold:serialsToSell,notes:values.notes||null};const response=await ordersAPI.create(orderData);if(response.data.success){// Đánh dấu serial đã bán\nif(serialsToSell.length>0){await productsAPI.sellSerials({serial_numbers:serialsToSell,order_id:response.data.data.id,customer_id:response.data.data.customer_id||(selectedCustomer===null||selectedCustomer===void 0?void 0:selectedCustomer.id)||null,sold_price:getTotalAmount(),notes:\"B\\xE1n qua POS - \".concat(response.data.data.order_number)});}// Refresh customer list to sync with customers page\nawait fetchCustomers();toast.success('Tạo đơn hàng thành công!');setSelectedCustomer(null);clearCart();setOrderModalVisible(false);reset();// Reset form\nfetchProducts();setPrintOrder(response.data.data);setPrintModalVisible(true);}else{toast.error(response.data.message||'Lỗi khi tạo đơn hàng');}}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Lỗi kết nối khi tạo đơn hàng.';toast.error(errorMessage);}finally{setLoading(false);}};const handleQuickAddCustomer=async values=>{setCustomerQuickAddLoading(true);try{const response=await customersAPI.create({name:values.name,phone:values.phone,email:values.email,address:values.address});if(response.data.success){toast.success('Thêm khách hàng thành công!');await fetchCustomers();// Refresh customer list\nsetCustomerQuickAddVisible(false);}else{toast.error(response.data.message||'Lỗi khi thêm khách hàng');}}catch(error){var _error$response2,_error$response2$data;const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Lỗi kết nối khi thêm khách hàng.';toast.error(errorMessage);}finally{setCustomerQuickAddLoading(false);}};const customerColumns=[{title:'Tên khách hàng',dataIndex:'name',key:'name'},{title:'Số điện thoại',dataIndex:'phone',key:'phone'},{title:'Email',dataIndex:'email',key:'email'},{title:'Địa chỉ',dataIndex:'address',key:'address'},{title:'Hành động',key:'action',render:(_,record)=>/*#__PURE__*/_jsx(Button,{type:\"link\",onClick:()=>selectCustomer(record),children:\"Ch\\u1ECDn\"})}];return/*#__PURE__*/_jsxs(\"div\",{className:\"pos-page\",children:[/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{xs:24,lg:16,children:/*#__PURE__*/_jsx(Card,{title:\"Danh s\\xE1ch s\\u1EA3n ph\\u1EA9m\",extra:/*#__PURE__*/_jsxs(Space,{direction:\"vertical\",size:\"small\",children:[/*#__PURE__*/_jsx(Search,{placeholder:\"T\\xECm s\\u1EA3n ph\\u1EA9m...\",onSearch:handleSearch,style:{width:200},loading:loading}),/*#__PURE__*/_jsx(Search,{placeholder:\"Qu\\xE9t Serial Number...\",onSearch:handleSerialSearch,enterButton:\"Qu\\xE9t\",style:{width:200},loading:loading})]}),children:loading?/*#__PURE__*/_jsx(Skeleton,{active:true,paragraph:{rows:8}}):/*#__PURE__*/_jsx(ProductList,{products:filteredProducts,loading:loading,onAddToCart:addToCart,onShowSerialModal:showSerialModal,formatCurrency:formatCurrency})})}),/*#__PURE__*/_jsx(Col,{xs:24,lg:8,children:/*#__PURE__*/_jsxs(Card,{title:\"Gi\\u1ECF h\\xE0ng\",actions:[/*#__PURE__*/_jsxs(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(ShoppingCartOutlined,{}),onClick:handleCheckout,disabled:cart.length===0,children:[\"Thanh to\\xE1n (\",getTotalItems(),\")\"]}),/*#__PURE__*/_jsx(Button,{danger:true,icon:/*#__PURE__*/_jsx(DeleteOutlined,{}),onClick:clearCart,disabled:cart.length===0,children:\"X\\xF3a gi\\u1ECF h\\xE0ng\"})],children:[/*#__PURE__*/_jsx(CartList,{cart:cart,onRemove:removeFromCart,onUpdateQuantity:updateQuantity,formatCurrency:formatCurrency}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'right'},children:/*#__PURE__*/_jsxs(Title,{level:3,children:[\"T\\u1ED5ng c\\u1ED9ng: \",formatCurrency(getTotalAmount())]})})]})})]}),/*#__PURE__*/_jsx(OrderFormModal,{visible:orderModalVisible,onSubmit:submitOrder,onCancel:()=>setOrderModalVisible(false),control:control,errors:errors,handleSubmit:handleSubmit,loading:loading,selectedCustomer:selectedCustomer,clearSelectedCustomer:clearSelectedCustomer,getTotalAmount:getTotalAmount,getTotalItems:getTotalItems}),/*#__PURE__*/_jsx(CustomerSelectModal,{visible:customerModalVisible,onOk:selectCustomer,onCancel:()=>setCustomerModalVisible(false),customers:customers,loading:loading,onSearch:handleCustomerSearch,filteredCustomers:filteredCustomers,selectCustomer:selectCustomer}),/*#__PURE__*/_jsx(SerialSelectModal,{visible:serialModalVisible,onOk:addSerialToCart,onCancel:()=>setSerialModalVisible(false),serials:availableSerials,selectedSerials:selectedSerials,setSelectedSerials:setSelectedSerials,loading:loading}),/*#__PURE__*/_jsx(OrderPrintModal,{visible:printModalVisible,order:printOrder,onClose:()=>setPrintModalVisible(false),formatCurrency:formatCurrency}),/*#__PURE__*/_jsx(CustomerQuickAddModal,{visible:customerQuickAddVisible,onOk:handleQuickAddCustomer,onCancel:()=>setCustomerQuickAddVisible(false),loading:customerQuickAddLoading}),/*#__PURE__*/_jsx(ToastContainer,{position:\"bottom-right\",autoClose:3000,hideProgressBar:false,newestOnTop:false,closeOnClick:true,rtl:false,pauseOnFocusLoss:true,draggable:true,pauseOnHover:true})]});}export default POSPage;","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Card","Input","Button","List","Typography","message","Modal","Form","InputNumber","Space","Tag","Divider","Spin","Table","Radio","motion","Skeleton","PlusOutlined","MinusOutlined","DeleteOutlined","ShoppingCartOutlined","PrinterOutlined","SearchOutlined","ShoppingOutlined","UserOutlined","useForm","Controller","zodResolver","z","toast","productsAPI","ordersAPI","customersAPI","formatCurrency","CartList","SerialSelectModal","CustomerSelectModal","ProductList","OrderPrintModal","OrderFormModal","CustomerQuickAddModal","jsx","_jsx","jsxs","_jsxs","Title","Text","Search","orderSchema","object","customer_id","number","int","positive","optional","nullable","customer_name","string","customer_phone","customer_email","email","or","literal","payment_method","enum","notes","POSPage","products","setProducts","filteredProducts","setFilteredProducts","cart","setCart","loading","setLoading","orderModalVisible","setOrderModalVisible","customerModalVisible","setCustomerModalVisible","customers","setCustomers","filteredCustomers","setFilteredCustomers","selectedCustomer","setSelectedCustomer","serialModalVisible","setSerialModalVisible","selectedProductForSerial","setSelectedProductForSerial","availableSerials","setAvailableSerials","selectedSerials","setSelectedSerials","printModalVisible","setPrintModalVisible","printOrder","setPrintOrder","customerQuickAddVisible","setCustomerQuickAddVisible","customerQuickAddLoading","setCustomerQuickAddLoading","control","handleSubmit","formState","errors","setValue","watch","reset","resolver","defaultValues","customerPhoneWatch","fetchProducts","fetchCustomers","id","name","phone","searchQuery","arguments","length","undefined","response","getAll","data","success","error","console","handleCustomerSearch","value","filtered","filter","customer","_customer$phone","toLowerCase","includes","selectCustomer","clearSelectedCustomer","handleSearch","product","_product$sku","_product$barcode","sku","barcode","handleSerialSearch","serialNumber","trim","searchSerials","q","status","serial","find","p","product_id","existingItem","item","_item$serial","serial_number","warning","concat","prev","quantity","price","showSerialModal","getSerials","Array","isArray","addToCart","addSerialToCart","forEach","_item$serial2","removeFromCart","productId","_item$serial3","updateQuantity","newQuantity","map","_item$serial4","_objectSpread","clearCart","getTotalAmount","reduce","total","getTotalItems","handleCheckout","submitOrder","values","serialsToSell","push","orderData","items","_item$serial5","product_name","subtotal","total_amount","serials_sold","create","sellSerials","serial_numbers","order_id","sold_price","order_number","_error$response","_error$response$data","errorMessage","handleQuickAddCustomer","address","_error$response2","_error$response2$data","customerColumns","title","dataIndex","key","render","_","record","type","onClick","children","className","gutter","xs","lg","extra","direction","size","placeholder","onSearch","style","width","enterButton","active","paragraph","rows","onAddToCart","onShowSerialModal","actions","icon","disabled","danger","onRemove","onUpdateQuantity","textAlign","level","visible","onSubmit","onCancel","onOk","serials","order","onClose","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sources":["C:/Users/ADMIN/Desktop/kho/kho/client/src/pages/POSPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Row, \n  Col, \n  Card, \n  Input, \n  Button, \n  List, \n  Typography, \n  message, \n  Modal,\n  Form,\n  InputNumber,\n  Space,\n  Tag,\n  Divider,\n  Spin,\n  Table,\n  Radio,\n  motion,\n  Skeleton\n} from 'antd';\nimport { \n  PlusOutlined, \n  MinusOutlined, \n  DeleteOutlined,\n  ShoppingCartOutlined,\n  PrinterOutlined,\n  SearchOutlined,\n  ShoppingOutlined,\n  UserOutlined\n} from '@ant-design/icons';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { toast } from 'sonner';\n\nimport { productsAPI, ordersAPI, customersAPI } from '../services/api';\nimport { formatCurrency } from '../utils/format';\nimport CartList from '../components/CartList';\nimport SerialSelectModal from '../components/SerialSelectModal';\nimport CustomerSelectModal from '../components/CustomerSelectModal';\nimport ProductList from '../components/ProductList';\nimport OrderPrintModal from '../components/OrderPrintModal';\nimport OrderFormModal from '../components/OrderFormModal';\nimport CustomerQuickAddModal from '../components/CustomerQuickAddModal';\n\nconst { Title, Text } = Typography;\nconst { Search } = Input;\n\nconst orderSchema = z.object({\n  customer_id: z.number().int().positive().optional().nullable(),\n  customer_name: z.string().optional(),\n  customer_phone: z.string().optional(),\n  customer_email: z.string().email('Email không hợp lệ').optional().or(z.literal('')),\n  payment_method: z.enum(['cash', 'card', 'transfer', 'ewallet']).optional(),\n  notes: z.string().optional(),\n});\n\nfunction POSPage() {\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [orderModalVisible, setOrderModalVisible] = useState(false);\n  const [customerModalVisible, setCustomerModalVisible] = useState(false);\n  const [customers, setCustomers] = useState([]);\n  const [filteredCustomers, setFilteredCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [serialModalVisible, setSerialModalVisible] = useState(false);\n  const [selectedProductForSerial, setSelectedProductForSerial] = useState(null);\n  const [availableSerials, setAvailableSerials] = useState([]);\n  const [selectedSerials, setSelectedSerials] = useState([]);\n  const [printModalVisible, setPrintModalVisible] = useState(false);\n  const [printOrder, setPrintOrder] = useState(null);\n  const [customerQuickAddVisible, setCustomerQuickAddVisible] = useState(false);\n  const [customerQuickAddLoading, setCustomerQuickAddLoading] = useState(false);\n\n  const { control, handleSubmit, formState: { errors }, setValue, watch, reset } = useForm({\n    resolver: zodResolver(orderSchema),\n    defaultValues: {\n      customer_id: null,\n      customer_name: '',\n      customer_phone: '',\n      customer_email: '',\n      payment_method: 'cash',\n      notes: '',\n    }\n  });\n\n  const customerPhoneWatch = watch('customer_phone');\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCustomers();\n  }, []);\n\n  useEffect(() => {\n    if (selectedCustomer) {\n      setValue('customer_id', selectedCustomer.id);\n      setValue('customer_name', selectedCustomer.name);\n      setValue('customer_phone', selectedCustomer.phone);\n      setValue('customer_email', selectedCustomer.email || '');\n    } else {\n      setValue('customer_id', null);\n    }\n  }, [selectedCustomer, setValue]);\n\n  const fetchCustomers = async (searchQuery = '') => {\n    try {\n      const response = await customersAPI.getAll({ phone: searchQuery, name: searchQuery });\n      if (\n        response.data.success) {\n        setCustomers(response.data.data || []);\n        setFilteredCustomers(response.data.data || []);\n      } else {\n        setCustomers([]);\n        toast.error('Lỗi khi lấy danh sách khách hàng: ' + response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching customers:', error);\n      setCustomers([]);\n      toast.error('Lỗi kết nối khi lấy danh sách khách hàng.');\n    }\n  };\n\n  const handleCustomerSearch = (value) => {\n    const filtered = customers.filter(customer =>\n      customer.name.toLowerCase().includes(value.toLowerCase()) ||\n      customer.phone?.includes(value)\n    );\n    setFilteredCustomers(filtered);\n  };\n\n  const selectCustomer = (customer) => {\n    setSelectedCustomer(customer);\n    setCustomerModalVisible(false);\n  };\n\n  const clearSelectedCustomer = () => {\n    setSelectedCustomer(null);\n    setValue('customer_id', null);\n    setValue('customer_name', '');\n    setValue('customer_phone', '');\n    setValue('customer_email', '');\n  };\n\n  const fetchProducts = async () => {\n    try {\n      setLoading(true);\n      const response = await productsAPI.getAll();\n      if (response.data.success) {\n        setProducts(response.data.data || []);\n        setFilteredProducts(response.data.data || []);\n      } else {\n        setProducts([]);\n        console.error('API returned error:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      setProducts([]);\n      // Don't show error message to user, just silently handle it\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (value) => {\n    const filtered = products.filter(product =>\n      product.name.toLowerCase().includes(value.toLowerCase()) ||\n      product.sku?.toLowerCase().includes(value.toLowerCase()) ||\n      product.barcode?.toLowerCase().includes(value.toLowerCase())\n    );\n    setFilteredProducts(filtered);\n  };\n\n  const handleSerialSearch = async (serialNumber) => {\n    if (!serialNumber.trim()) {\n      setFilteredProducts(products);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      // Tìm kiếm serial trong database\n              const response = await productsAPI.searchSerials({ \n        q: serialNumber, \n        status: 'available' \n      });\n      \n      if (response.data.success && response.data.data.length > 0) {\n        const serial = response.data.data[0];\n        \n        // Tìm sản phẩm tương ứng với serial\n        const product = products.find(p => p.id === serial.product_id);\n        \n        if (product) {\n          // Hiển thị sản phẩm tìm thấy\n          setFilteredProducts([product]);\n          \n          // Tự động thêm serial vào giỏ hàng\n          const existingItem = cart.find(item => \n            item.product.id === product.id && \n            item.serial?.serial_number === serial.serial_number\n          );\n          \n          if (existingItem) {\n            toast.warning(`Serial ${serial.serial_number} đã có trong giỏ hàng`);\n          } else {\n            setCart(prev => [...prev, {\n              product: product,\n              quantity: 1,\n              serial: serial,\n              price: product.price\n            }]);\n            toast.success(`Đã thêm sản phẩm ${product.name} (Serial: ${serial.serial_number}) vào giỏ hàng`);\n          }\n        } else {\n          toast.error('Không tìm thấy sản phẩm tương ứng với serial này');\n        }\n      } else {\n        toast.error('Không tìm thấy serial hoặc serial đã được bán');\n        setFilteredProducts(products);\n      }\n    } catch (error) {\n      console.error('Error searching serial:', error);\n      toast.error('Lỗi khi tìm kiếm serial');\n      setFilteredProducts(products);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const showSerialModal = async (product) => {\n    try {\n      setSelectedProductForSerial(product);\n              const response = await productsAPI.getSerials(product.id, { status: 'available' });\n      if (response.data.success) {\n        setAvailableSerials(Array.isArray(response.data.data) ? response.data.data : []);\n      } else {\n        setAvailableSerials([]);\n      }\n      setSerialModalVisible(true);\n    } catch (error) {\n      console.error('Error fetching serials:', error);\n      setAvailableSerials([]);\n      toast.error('Không thể tải danh sách serial của sản phẩm');\n    }\n  };\n\n  const addToCart = async (product) => {\n    try {\n      // Thay vì thêm trực tiếp vào giỏ hàng, hiển thị modal chọn serial\n      await showSerialModal(product);\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n      toast.error('Lỗi khi thêm sản phẩm vào giỏ hàng');\n    }\n  };\n\n  const addSerialToCart = (selectedSerials) => {\n    if (!selectedSerials || selectedSerials.length === 0) {\n      toast.warning('Vui lòng chọn ít nhất một serial');\n      return;\n    }\n\n    selectedSerials.forEach(serial => {\n      const existingItem = cart.find(item => \n        item.product.id === selectedProductForSerial.id && \n        item.serial?.serial_number === serial.serial_number\n      );\n      \n      if (existingItem) {\n        toast.warning(`Serial ${serial.serial_number} đã có trong giỏ hàng`);\n        return;\n      }\n\n      setCart(prev => [...prev, {\n        product: selectedProductForSerial,\n        quantity: 1,\n        serial: serial,\n        price: selectedProductForSerial.price\n      }]);\n    });\n\n    toast.success(`Đã thêm ${selectedSerials.length} sản phẩm vào giỏ hàng`);\n    setSerialModalVisible(false);\n    setSelectedSerials([]);\n  };\n\n  const removeFromCart = (productId, serialNumber) => {\n    if (serialNumber) {\n      // Xóa item có serial cụ thể\n      setCart(prev => prev.filter(item => \n        !(item.product.id === productId && item.serial?.serial_number === serialNumber)\n      ));\n    } else {\n      // Xóa tất cả item của sản phẩm này (fallback)\n      setCart(prev => prev.filter(item => item.product.id !== productId));\n    }\n  };\n\n  const updateQuantity = (productId, serialNumber, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(productId, serialNumber);\n      return;\n    }\n    \n    setCart(prev => prev.map(item => {\n      if (item.product.id === productId && item.serial?.serial_number === serialNumber) {\n        return { ...item, quantity: newQuantity };\n      }\n      return item;\n    }));\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  const getTotalAmount = () => {\n    return cart.reduce((total, item) => total + (item.price * item.quantity), 0);\n  };\n\n  const getTotalItems = () => {\n    return cart.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  const handleCheckout = () => {\n    if (cart.length === 0) {\n      toast.warning('Giỏ hàng trống');\n      return;\n    }\n    setOrderModalVisible(true);\n  };\n\n  const submitOrder = async (values) => {\n    setLoading(true);\n    try {\n      // Tổng hợp tất cả serial để bán\n      const serialsToSell = [];\n      cart.forEach(item => {\n        if (item.serial && item.serial.serial_number) {\n          serialsToSell.push(item.serial.serial_number);\n        }\n      });\n\n      const orderData = {\n        customer_id: selectedCustomer?.id || null,\n        customer_name: selectedCustomer?.name || values.customer_name || null,\n        customer_phone: selectedCustomer?.phone || values.customer_phone || null,\n        customer_email: selectedCustomer?.email || values.customer_email || null,\n        payment_method: values.payment_method || 'cash',\n        items: cart.map(item => ({\n          product_id: item.product.id,\n          product_name: item.product.name,\n          quantity: item.quantity,\n          price: item.price,\n          subtotal: item.quantity * item.price,\n          serial_number: item.serial?.serial_number || null\n        })),\n        total_amount: getTotalAmount(),\n        serials_sold: serialsToSell,\n        notes: values.notes || null\n      };\n\n      const response = await ordersAPI.create(orderData);\n      \n      if (response.data.success) {\n        // Đánh dấu serial đã bán\n        if (serialsToSell.length > 0) {\n          await productsAPI.sellSerials({\n            serial_numbers: serialsToSell,\n            order_id: response.data.data.id,\n            customer_id: response.data.data.customer_id || selectedCustomer?.id || null,\n            sold_price: getTotalAmount(),\n            notes: `Bán qua POS - ${response.data.data.order_number}`\n          });\n        }\n\n        // Refresh customer list to sync with customers page\n        await fetchCustomers();\n\n        toast.success('Tạo đơn hàng thành công!');\n        setSelectedCustomer(null);\n        clearCart();\n        setOrderModalVisible(false);\n        reset(); // Reset form\n        fetchProducts();\n        setPrintOrder(response.data.data);\n        setPrintModalVisible(true);\n      } else {\n        toast.error(response.data.message || 'Lỗi khi tạo đơn hàng');\n      }\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Lỗi kết nối khi tạo đơn hàng.';\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleQuickAddCustomer = async (values) => {\n    setCustomerQuickAddLoading(true);\n    try {\n      const response = await customersAPI.create({\n        name: values.name,\n        phone: values.phone,\n        email: values.email,\n        address: values.address,\n      });\n      if (response.data.success) {\n        toast.success('Thêm khách hàng thành công!');\n        await fetchCustomers(); // Refresh customer list\n        setCustomerQuickAddVisible(false);\n      } else {\n        toast.error(response.data.message || 'Lỗi khi thêm khách hàng');\n      }\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Lỗi kết nối khi thêm khách hàng.';\n      toast.error(errorMessage);\n    } finally {\n      setCustomerQuickAddLoading(false);\n    }\n  };\n\n  const customerColumns = [\n    {\n      title: 'Tên khách hàng',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Số điện thoại',\n      dataIndex: 'phone',\n      key: 'phone',\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n    },\n    {\n      title: 'Địa chỉ',\n      dataIndex: 'address',\n      key: 'address',\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (_, record) => (\n        <Button type=\"link\" onClick={() => selectCustomer(record)}>Chọn</Button>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"pos-page\">\n      <Row gutter={[16, 16]}>\n        <Col xs={24} lg={16}>\n          <Card \n            title=\"Danh sách sản phẩm\"\n            extra={\n              <Space direction=\"vertical\" size=\"small\">\n                <Search\n                  placeholder=\"Tìm sản phẩm...\"\n                  onSearch={handleSearch}\n                  style={{ width: 200 }}\n                  loading={loading}\n                />\n                <Search\n                  placeholder=\"Quét Serial Number...\"\n                  onSearch={handleSerialSearch}\n                  enterButton=\"Quét\"\n                  style={{ width: 200 }}\n                  loading={loading}\n                />\n              </Space>\n            }\n          >\n            {loading ? (\n              <Skeleton active paragraph={{ rows: 8 }} />\n            ) : (\n              <ProductList products={filteredProducts} loading={loading} onAddToCart={addToCart} onShowSerialModal={showSerialModal} formatCurrency={formatCurrency} />\n            )}\n          </Card>\n        </Col>\n\n        <Col xs={24} lg={8}>\n          <Card\n            title=\"Giỏ hàng\"\n            actions={[\n              <Button\n                type=\"primary\"\n                icon={<ShoppingCartOutlined />}\n                onClick={handleCheckout}\n                disabled={cart.length === 0}\n              >\n                Thanh toán ({getTotalItems()})\n              </Button>,\n              <Button\n                danger\n                icon={<DeleteOutlined />}\n                onClick={clearCart}\n                disabled={cart.length === 0}\n              >\n                Xóa giỏ hàng\n              </Button>,\n            ]}\n          >\n            <CartList cart={cart} onRemove={removeFromCart} onUpdateQuantity={updateQuantity} formatCurrency={formatCurrency} />\n            <Divider />\n            <div style={{ textAlign: 'right' }}>\n              <Title level={3}>Tổng cộng: {formatCurrency(getTotalAmount())}</Title>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n\n      <OrderFormModal visible={orderModalVisible} onSubmit={submitOrder} onCancel={() => setOrderModalVisible(false)} control={control} errors={errors} handleSubmit={handleSubmit} loading={loading} selectedCustomer={selectedCustomer} clearSelectedCustomer={clearSelectedCustomer} getTotalAmount={getTotalAmount} getTotalItems={getTotalItems} />\n      <CustomerSelectModal visible={customerModalVisible} onOk={selectCustomer} onCancel={() => setCustomerModalVisible(false)} customers={customers} loading={loading} onSearch={handleCustomerSearch} filteredCustomers={filteredCustomers} selectCustomer={selectCustomer} />\n      <SerialSelectModal visible={serialModalVisible} onOk={addSerialToCart} onCancel={() => setSerialModalVisible(false)} serials={availableSerials} selectedSerials={selectedSerials} setSelectedSerials={setSelectedSerials} loading={loading} />\n      <OrderPrintModal visible={printModalVisible} order={printOrder} onClose={() => setPrintModalVisible(false)} formatCurrency={formatCurrency} />\n      <CustomerQuickAddModal visible={customerQuickAddVisible} onOk={handleQuickAddCustomer} onCancel={() => setCustomerQuickAddVisible(false)} loading={customerQuickAddLoading} />\n      <ToastContainer position=\"bottom-right\" autoClose={3000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\n    </div>\n  );\n}\n\nexport default POSPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}